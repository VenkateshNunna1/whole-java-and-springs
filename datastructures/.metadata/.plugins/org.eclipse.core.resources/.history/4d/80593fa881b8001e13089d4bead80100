package com.LL;

public class LL {
   private Node head;
   private Node tail;
   private int size;
   
   public void insertFirst(int val) {
	   Node n = new Node(val);
	   n.next=head;
	   head=n;
	   if(tail==null) {
		   tail=head;
	   }
	   size++;
   }
   public void display() {
	   Node temp=head;
	   while(temp!=null) {
		   System.out.print(temp.val+"->");
		   temp=temp.next;
	   }
   }
   public void  insertLast(int val) {
          Node n = new Node(val);
          if(tail==null) {
        	  insertFirst(val);
        	  return;
          }
          tail.next=n;
          tail=n;
          size++;
           
   }
   public void insert(int val,int index) {
	   if(index<=-1 || index>=size()) {
		   throw new IndexOutOfBoundsException();
	   }
	   if(index==0) {
		   insertFirst(val);
		   return;
	   }
	   if(index==size) {
		   insertLast(val);
	   }
	   Node temp=head;
	   for(int i=1;i<index;i++){
		   temp=temp.next;
	   }
	   Node node = new Node(val,temp.next);
   }
   public int size() {
	   return size;
   }
   
}
